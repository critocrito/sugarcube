name: Build Status
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  ci:
    runs-on: ${{ matrix.os }}
    name: ci

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: [12, 14]

        exclude:
          - os: ubuntu-latest
            node: 12
            make:
              name: Coverage

        make:
          - name: Lint
            task: "lint"

          - name: Test
            task: "test:all"

          - name: Coverage
            task: "coverage:report"

    steps:
      - uses: actions/checkout@v2

      # Configure Hosts
      - name: Install packages (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: scripts/ci/ubuntu-install-packages

      # NodeJS
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node dependencies
        run: |
          yarn install
          yarn setup

      # Run tasks
      - name: ${{ matrix.make.name }}
        run: yarn ${{ matrix.make.task }}

      # Coverage
      - name: Coveralls GitHub Action
        if: matrix.make.name == 'Coverage'
        uses: coverallsapp/github-action@v1.1.2
        with:
          path-to-lcov: "./lcov.info"
          github-token: ${{ github.token }}
